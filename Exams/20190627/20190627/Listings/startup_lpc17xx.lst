


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ********************//**
    2 00000000         ; * @file     startup_LPC17xx.s
    3 00000000         ; * @brief    CMSIS Cortex-M3 Core Device Startup File f
                       or
    4 00000000         ; *           NXP LPC17xx Device Series
    5 00000000         ; * @version  V1.10
    6 00000000         ; * @date     06. April 2011
    7 00000000         ; *
    8 00000000         ; * @note
    9 00000000         ; * Copyright (C) 2009-2011 ARM Limited. All rights rese
                       rved.
   10 00000000         ; *
   11 00000000         ; * @par
   12 00000000         ; * ARM Limited (ARM) is supplying this software for use
                        with Cortex-M
   13 00000000         ; * processor based microcontrollers.  This file can be 
                       freely distributed
   14 00000000         ; * within development tools that are supporting such AR
                       M based processors.
   15 00000000         ; *
   16 00000000         ; * @par
   17 00000000         ; * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, W
                       HETHER EXPRESS, IMPLIED
   18 00000000         ; * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
                        WARRANTIES OF
   19 00000000         ; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                        APPLY TO THIS SOFTWARE.
   20 00000000         ; * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR S
                       PECIAL, INCIDENTAL, OR
   21 00000000         ; * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ; *
   23 00000000         ; ******************************************************
                       ************************/
   24 00000000         
   25 00000000         ; *------- <<< Use Configuration Wizard in Context Menu 
                       >>> ------------------
   26 00000000         
   27 00000000         ; <h> Stack Configuration
   28 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ; </h>
   30 00000000         
   31 00000000 00000200 
                       Stack_Size
                               EQU              0x00000200
   32 00000000         
   33 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   34 00000000         Stack_Mem
                               SPACE            Stack_Size
   35 00000200         __initial_sp
   36 00000200         
   37 00000200         
   38 00000200         ; <h> Heap Configuration
   39 00000200         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   40 00000200         ; </h>
   41 00000200         
   42 00000200 00000000 
                       Heap_Size



ARM Macro Assembler    Page 2 


                               EQU              0x00000000
   43 00000200         
   44 00000200                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   45 00000000         __heap_base
   46 00000000         Heap_Mem
                               SPACE            Heap_Size
   47 00000000         __heap_limit
   48 00000000         
   49 00000000         
   50 00000000                 PRESERVE8
   51 00000000                 THUMB
   52 00000000         
   53 00000000         
   54 00000000         ; Vector Table Mapped to Address 0 at Reset
   55 00000000         
   56 00000000                 AREA             RESET, DATA, READONLY
   57 00000000                 EXPORT           __Vectors
   58 00000000         
   59 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   60 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   61 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   62 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   63 00000010 00000000        DCD              MemManage_Handler 
                                                            ; MPU Fault Handler
                                                            
   64 00000014 00000000        DCD              BusFault_Handler 
                                                            ; Bus Fault Handler
                                                            
   65 00000018 00000000        DCD              UsageFault_Handler ; Usage Faul
                                                            t Handler
   66 0000001C 00000000        DCD              0           ; Reserved
   67 00000020 00000000        DCD              0           ; Reserved
   68 00000024 00000000        DCD              0           ; Reserved
   69 00000028 00000000        DCD              0           ; Reserved
   70 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
   71 00000030 00000000        DCD              DebugMon_Handler ; Debug Monito
                                                            r Handler
   72 00000034 00000000        DCD              0           ; Reserved
   73 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
   74 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
   75 00000040         
   76 00000040         ; External Interrupts
   77 00000040 00000000        DCD              WDT_IRQHandler ; 16: Watchdog T
                                                            imer
   78 00000044 00000000        DCD              TIMER0_IRQHandler ; 17: Timer0
   79 00000048 00000000        DCD              TIMER1_IRQHandler ; 18: Timer1
   80 0000004C 00000000        DCD              TIMER2_IRQHandler ; 19: Timer2
   81 00000050 00000000        DCD              TIMER3_IRQHandler ; 20: Timer3
   82 00000054 00000000        DCD              UART0_IRQHandler ; 21: UART0
   83 00000058 00000000        DCD              UART1_IRQHandler ; 22: UART1
   84 0000005C 00000000        DCD              UART2_IRQHandler ; 23: UART2
   85 00000060 00000000        DCD              UART3_IRQHandler ; 24: UART3
   86 00000064 00000000        DCD              PWM1_IRQHandler ; 25: PWM1



ARM Macro Assembler    Page 3 


   87 00000068 00000000        DCD              I2C0_IRQHandler ; 26: I2C0
   88 0000006C 00000000        DCD              I2C1_IRQHandler ; 27: I2C1
   89 00000070 00000000        DCD              I2C2_IRQHandler ; 28: I2C2
   90 00000074 00000000        DCD              SPI_IRQHandler ; 29: SPI
   91 00000078 00000000        DCD              SSP0_IRQHandler ; 30: SSP0
   92 0000007C 00000000        DCD              SSP1_IRQHandler ; 31: SSP1
   93 00000080 00000000        DCD              PLL0_IRQHandler ; 32: PLL0 Lock
                                                             (Main PLL)
   94 00000084 00000000        DCD              RTC_IRQHandler ; 33: Real Time 
                                                            Clock
   95 00000088 00000000        DCD              EINT0_IRQHandler ; 34: External
                                                             Interrupt 0
   96 0000008C 00000000        DCD              EINT1_IRQHandler ; 35: External
                                                             Interrupt 1
   97 00000090 00000000        DCD              EINT2_IRQHandler ; 36: External
                                                             Interrupt 2
   98 00000094 00000000        DCD              EINT3_IRQHandler ; 37: External
                                                             Interrupt 3
   99 00000098 00000000        DCD              ADC_IRQHandler 
                                                            ; 38: A/D Converter
                                                            
  100 0000009C 00000000        DCD              BOD_IRQHandler ; 39: Brown-Out 
                                                            Detect
  101 000000A0 00000000        DCD              USB_IRQHandler ; 40: USB
  102 000000A4 00000000        DCD              CAN_IRQHandler ; 41: CAN
  103 000000A8 00000000        DCD              DMA_IRQHandler ; 42: General Pu
                                                            rpose DMA
  104 000000AC 00000000        DCD              I2S_IRQHandler ; 43: I2S
  105 000000B0 00000000        DCD              ENET_IRQHandler ; 44: Ethernet
  106 000000B4 00000000        DCD              RIT_IRQHandler ; 45: Repetitive
                                                             Interrupt Timer
  107 000000B8 00000000        DCD              MCPWM_IRQHandler ; 46: Motor Co
                                                            ntrol PWM
  108 000000BC 00000000        DCD              QEI_IRQHandler ; 47: Quadrature
                                                             Encoder Interface
  109 000000C0 00000000        DCD              PLL1_IRQHandler ; 48: PLL1 Lock
                                                             (USB PLL)
  110 000000C4 00000000        DCD              USBActivity_IRQHandler ; 49: US
                                                            B Activity interrup
                                                            t to wakeup
  111 000000C8 00000000        DCD              CANActivity_IRQHandler ; 50: CA
                                                            N Activity interrup
                                                            t to wakeup
  112 000000CC         
  113 000000CC         
  114 000000CC                 IF               :LNOT::DEF:NO_CRP
  115 000000CC                 AREA             |.ARM.__at_0x02FC|, CODE, READO
NLY
  116 00000000 FFFFFFFF 
                       CRP_Key DCD              0xFFFFFFFF
  117 00000004                 ENDIF
  118 00000004         
  119 00000004         
  120 00000004                 AREA             |.text|, CODE, READONLY
  121 00000000         
  122 00000000         
  123 00000000         ; Reset Handler
  124 00000000         
  125 00000000         Reset_Handler



ARM Macro Assembler    Page 4 


                               PROC
  126 00000000                 EXPORT           Reset_Handler             [WEAK
]
  127 00000000         
  128 00000000         ; item 1
  129 00000000         ;LDR r0, =1234657
  130 00000000         ;BL isPrimeNumber
  131 00000000         
  132 00000000         ; remove comments to solve item 2
  133 00000000         ;LDR r0, =503222
  134 00000000         ;BL GoldbachConjecture 
  135 00000000         
  136 00000000         ; remove comments to solve item 3
  137 00000000                 IMPORT           SystemInit
  138 00000000                 IMPORT           __main
  139 00000000 482C            LDR              R0, =SystemInit
  140 00000002 4780            BLX              R0
  141 00000004 482C            LDR              R0, =__main
  142 00000006 4700            BX               R0
  143 00000008 E7FE    stop    B                stop
  144 0000000A                 ENDP
  145 0000000A         
  146 0000000A         isPrimeNumber
                               PROC
  147 0000000A         ;r0 = n
  148 0000000A EA81 0101       EOR              r1, r1      ; result
  149 0000000E 2801            CMP              r0, #1      ; if it is 1 return
                                                            
  150 00000010 D00F            BEQ              endPrimeNumber
  151 00000012 F04F 0202       MOV              r2, #2      ; counter for check
                                                            ing the divisibilit
                                                            y
  152 00000016 FBB0 F3F2 
                       cyclePrime
                               UDIV             r3, r0, r2  ; r3 = r0/r2
  153 0000001A FB03 F302       MUL              r3, r3, r2  ; r3 = r3*r2
  154 0000001E 4283            CMP              r3, r0
  155 00000020 D007            BEQ              endPrimeNumber ; if they are eq
                                                            ual, therefore r0 i
                                                            s divisible by r2
  156 00000022 F102 0201       ADD              r2, #1      ; go to next number
                                                            
  157 00000026 FB02 F302       MUL              r3, r2, r2  ; r3 = r2^2
  158 0000002A 4283            CMP              r3, r0
  159 0000002C D9F3            BLS              cyclePrime  ; loop until r2^2<=
                                                            r0, square method
  160 0000002E F04F 0101       MOV              r1, #1      ; the code is reach
                                                            ed only if the numb
                                                            er is prime
  161 00000032 4608    endPrimeNumber
                               MOV              r0, r1      ; return value in r
                                                            0
  162 00000034 4770            BX               LR
  163 00000036                 ENDP
  164 00000036         
  165 00000036         GoldbachConjecture
                               PROC
  166 00000036                 EXPORT           GoldbachConjecture
  167 00000036 B500            PUSH             {LR}



ARM Macro Assembler    Page 5 


  168 00000038         ; r0 = n
  169 00000038 EA81 0101       EOR              r1, r1      ; result
  170 0000003C 2803            CMP              r0, #3
  171 0000003E D919            BLS              endGConjecture ; because number
                                                            s 0, 1, 2, 3 return
                                                             0
  172 00000040 F04F 0202       MOV              r2, #2      ; index
  173 00000044 B407    cycleGConjecture
                               PUSH             {r0-r2}     ; save register in 
                                                            order to call isPri
                                                            meNumber
  174 00000046 4610            MOV              r0, r2      ; put the parameter
                                                             of isPrimeNumber i
                                                            n r0
  175 00000048 F7FF FFFE       BL               isPrimeNumber ; call the proced
                                                            ure
  176 0000004C 2801            CMP              r0, #1      ; check if the numb
                                                            er is prime
  177 0000004E BC07            POP              {r0-r2}     ; i can do it becau
                                                            se flags don't chan
                                                            ge
  178 00000050 D10A            BNE              continue    ; if the number isn
                                                            't prime continue
  179 00000052 EBA0 0302       SUB              r3, r0, r2  ; calculate other a
                                                            ddend
  180 00000056 B40F            PUSH             {r0-r3}     ; |
  181 00000058 4618            MOV              r0, r3      ; |
  182 0000005A F7FF FFFE       BL               isPrimeNumber ; | pratically th
                                                            e same but for seco
                                                            nd addend
  183 0000005E 2801            CMP              r0, #1      ; |
  184 00000060 BC0F            POP              {r0-r3}     ; |
  185 00000062 D101            BNE              continue    ; |
  186 00000064 4611            MOV              r1, r2      ; save the return v
                                                            alue, if both are p
                                                            rime
  187 00000066 E005            B                endGConjecture ; go the end
  188 00000068 F102 0201 
                       continue
                               ADD              r2, #1      ; next number
  189 0000006C EA4F 0350       LSR              r3, r0, #1  ; r3 = r0/2
  190 00000070 429A            CMP              r2, r3
  191 00000072 D9E7            BLS              cycleGConjecture
  192 00000074 4608    endGConjecture
                               MOV              r0, r1      ; save the return
  193 00000076 BD00            POP              {PC}
  194 00000078                 ENDP
  195 00000078         
  196 00000078 E000E010 
                       Control EQU              0xE000E010
  197 00000078 E000E014 
                       Reload  EQU              0xE000E014
  198 00000078 E000E018 
                       Current EQU              0xE000E018
  199 00000078         
  200 00000078         startTimer
                               PROC
  201 00000078                 EXPORT           startTimer
  202 00000078         ; this procedure starts a timer that ticks every 0.1s



ARM Macro Assembler    Page 6 


  203 00000078         ; if the clock of LPC1768 is about 100MHz, we need to se
                       t a timer of 10 000 000 ticks
  204 00000078 4910            LDR              r1, =10000000
  205 0000007A         
  206 0000007A 4811            LDR              r0, =Control
  207 0000007C EA82 0202       EOR              r2, r2
  208 00000080 6002            STR              r2, [r0]    ; stop the timer by
                                                             setting 0 to contr
                                                            olStatusReg
  209 00000082         
  210 00000082 4810            LDR              r0, =Reload
  211 00000084 6001            STR              r1, [r0]    ; set the ticks
  212 00000086 4810            LDR              r0, =Current
  213 00000088 6001            STR              r1, [r0]    ; set a random valu
                                                            e to currentStatus 
                                                            ragister
  214 0000008A         
  215 0000008A 480D            LDR              r0, =Control
  216 0000008C F04F 0107       MOV              r1, #7      ; #2_111 for starti
                                                            ng the timer
  217 00000090 6001            STR              r1, [r0]    ; start the timer
  218 00000092                 ENDP
  219 00000092         
  220 00000092         
  221 00000092         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  222 00000092         
  223 00000092         NMI_Handler
                               PROC
  224 00000092                 EXPORT           NMI_Handler               [WEAK
]
  225 00000092 E7FE            B                .
  226 00000094                 ENDP
  228 00000094         HardFault_Handler
                               PROC
  229 00000094                 EXPORT           HardFault_Handler         [WEAK
]
  230 00000094 E7FE            B                .
  231 00000096                 ENDP
  233 00000096         MemManage_Handler
                               PROC
  234 00000096                 EXPORT           MemManage_Handler         [WEAK
]
  235 00000096 E7FE            B                .
  236 00000098                 ENDP
  238 00000098         BusFault_Handler
                               PROC
  239 00000098                 EXPORT           BusFault_Handler          [WEAK
]
  240 00000098 E7FE            B                .
  241 0000009A                 ENDP
  243 0000009A         UsageFault_Handler
                               PROC
  244 0000009A                 EXPORT           UsageFault_Handler        [WEAK
]
  245 0000009A E7FE            B                .
  246 0000009C                 ENDP
  247 0000009C         SVC_Handler
                               PROC



ARM Macro Assembler    Page 7 


  248 0000009C                 EXPORT           SVC_Handler               [WEAK
]
  249 0000009C E7FE            B                .
  250 0000009E                 ENDP
  252 0000009E         DebugMon_Handler
                               PROC
  253 0000009E                 EXPORT           DebugMon_Handler          [WEAK
]
  254 0000009E E7FE            B                .
  255 000000A0                 ENDP
  256 000000A0         PendSV_Handler
                               PROC
  257 000000A0                 EXPORT           PendSV_Handler            [WEAK
]
  258 000000A0 E7FE            B                .
  259 000000A2                 ENDP
  260 000000A2         SysTick_Handler
                               PROC
  261 000000A2                 EXPORT           SysTick_Handler           [WEAK
]
  262 000000A2 E7FE            B                .
  263 000000A4                 ENDP
  264 000000A4         
  265 000000A4         Default_Handler
                               PROC
  266 000000A4         
  267 000000A4                 EXPORT           WDT_IRQHandler            [WEAK
]
  268 000000A4                 EXPORT           TIMER0_IRQHandler         [WEAK
]
  269 000000A4                 EXPORT           TIMER1_IRQHandler         [WEAK
]
  270 000000A4                 EXPORT           TIMER2_IRQHandler         [WEAK
]
  271 000000A4                 EXPORT           TIMER3_IRQHandler         [WEAK
]
  272 000000A4                 EXPORT           UART0_IRQHandler          [WEAK
]
  273 000000A4                 EXPORT           UART1_IRQHandler          [WEAK
]
  274 000000A4                 EXPORT           UART2_IRQHandler          [WEAK
]
  275 000000A4                 EXPORT           UART3_IRQHandler          [WEAK
]
  276 000000A4                 EXPORT           PWM1_IRQHandler           [WEAK
]
  277 000000A4                 EXPORT           I2C0_IRQHandler           [WEAK
]
  278 000000A4                 EXPORT           I2C1_IRQHandler           [WEAK
]
  279 000000A4                 EXPORT           I2C2_IRQHandler           [WEAK
]
  280 000000A4                 EXPORT           SPI_IRQHandler            [WEAK
]
  281 000000A4                 EXPORT           SSP0_IRQHandler           [WEAK
]
  282 000000A4                 EXPORT           SSP1_IRQHandler           [WEAK
]
  283 000000A4                 EXPORT           PLL0_IRQHandler           [WEAK



ARM Macro Assembler    Page 8 


]
  284 000000A4                 EXPORT           RTC_IRQHandler            [WEAK
]
  285 000000A4                 EXPORT           EINT0_IRQHandler          [WEAK
]
  286 000000A4                 EXPORT           EINT1_IRQHandler          [WEAK
]
  287 000000A4                 EXPORT           EINT2_IRQHandler          [WEAK
]
  288 000000A4                 EXPORT           EINT3_IRQHandler          [WEAK
]
  289 000000A4                 EXPORT           ADC_IRQHandler            [WEAK
]
  290 000000A4                 EXPORT           BOD_IRQHandler            [WEAK
]
  291 000000A4                 EXPORT           USB_IRQHandler            [WEAK
]
  292 000000A4                 EXPORT           CAN_IRQHandler            [WEAK
]
  293 000000A4                 EXPORT           DMA_IRQHandler            [WEAK
]
  294 000000A4                 EXPORT           I2S_IRQHandler            [WEAK
]
  295 000000A4                 EXPORT           ENET_IRQHandler           [WEAK
]
  296 000000A4                 EXPORT           RIT_IRQHandler            [WEAK
]
  297 000000A4                 EXPORT           MCPWM_IRQHandler          [WEAK
]
  298 000000A4                 EXPORT           QEI_IRQHandler            [WEAK
]
  299 000000A4                 EXPORT           PLL1_IRQHandler           [WEAK
]
  300 000000A4                 EXPORT           USBActivity_IRQHandler    [WEAK
]
  301 000000A4                 EXPORT           CANActivity_IRQHandler    [WEAK
]
  302 000000A4         
  303 000000A4         WDT_IRQHandler
  304 000000A4         TIMER0_IRQHandler
  305 000000A4         TIMER1_IRQHandler
  306 000000A4         TIMER2_IRQHandler
  307 000000A4         TIMER3_IRQHandler
  308 000000A4         UART0_IRQHandler
  309 000000A4         UART1_IRQHandler
  310 000000A4         UART2_IRQHandler
  311 000000A4         UART3_IRQHandler
  312 000000A4         PWM1_IRQHandler
  313 000000A4         I2C0_IRQHandler
  314 000000A4         I2C1_IRQHandler
  315 000000A4         I2C2_IRQHandler
  316 000000A4         SPI_IRQHandler
  317 000000A4         SSP0_IRQHandler
  318 000000A4         SSP1_IRQHandler
  319 000000A4         PLL0_IRQHandler
  320 000000A4         RTC_IRQHandler
  321 000000A4         EINT0_IRQHandler
  322 000000A4         EINT1_IRQHandler
  323 000000A4         EINT2_IRQHandler



ARM Macro Assembler    Page 9 


  324 000000A4         EINT3_IRQHandler
  325 000000A4         ADC_IRQHandler
  326 000000A4         BOD_IRQHandler
  327 000000A4         USB_IRQHandler
  328 000000A4         CAN_IRQHandler
  329 000000A4         DMA_IRQHandler
  330 000000A4         I2S_IRQHandler
  331 000000A4         ENET_IRQHandler
  332 000000A4         RIT_IRQHandler
  333 000000A4         MCPWM_IRQHandler
  334 000000A4         QEI_IRQHandler
  335 000000A4         PLL1_IRQHandler
  336 000000A4         USBActivity_IRQHandler
  337 000000A4         CANActivity_IRQHandler
  338 000000A4         
  339 000000A4 E7FE            B                .
  340 000000A6         
  341 000000A6                 ENDP
  342 000000A6         
  343 000000A6         
  344 000000A6 00 00           ALIGN
  345 000000A8         
  346 000000A8         
  347 000000A8         ; User Initial Stack & Heap
  348 000000A8         
  349 000000A8                 IF               :DEF:__MICROLIB
  356 000000A8         
  357 000000A8                 IMPORT           __use_two_region_memory
  358 000000A8                 EXPORT           __user_initial_stackheap
  359 000000A8         __user_initial_stackheap
  360 000000A8         
  361 000000A8 4808            LDR              R0, =  Heap_Mem
  362 000000AA 4909            LDR              R1, =(Stack_Mem + Stack_Size)
  363 000000AC 4A07            LDR              R2, = (Heap_Mem +  Heap_Size)
  364 000000AE 4B09            LDR              R3, = Stack_Mem
  365 000000B0 4770            BX               LR
  366 000000B2         
  367 000000B2 00 00           ALIGN
  368 000000B4         
  369 000000B4                 ENDIF
  370 000000B4         
  371 000000B4         
  372 000000B4                 END
              00000000 
              00000000 
              00989680 
              E000E010 
              E000E014 
              E000E018 
              00000000 
              00000200 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\startup_lpc17xx.d -o.\objects\startup_lpc17xx.o -I.\RTE\
Device\LPC1768 -I.\RTE\_Target_1 -IC:\Users\asus\AppData\Local\Arm\Packs\ARM\CM
SIS\5.8.0\CMSIS\Core\Include -IC:\Users\asus\AppData\Local\Arm\Packs\Keil\LPC17
00_DFP\2.7.1\Device\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_
VERSION SETA 536" --predefine="_RTE_ SETA 1" --predefine="LPC175x_6x SETA 1" --
predefine="_RTE_ SETA 1" --list=.\listings\startup_lpc17xx.lst RTE\Device\LPC17



ARM Macro Assembler    Page 10 


68\startup_LPC17xx.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 33 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 34 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 362 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 364 in file RTE\Device\LPC1768\startup_LPC17xx.s

__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 35 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 59 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 44 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 46 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 361 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 363 in file RTE\Device\LPC1768\startup_LPC17xx.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 45 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 47 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 56 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 59 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 57 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x02FC 00000000

Symbol: .ARM.__at_0x02FC
   Definitions
      At line 115 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: .ARM.__at_0x02FC unused
CRP_Key 00000000

Symbol: CRP_Key
   Definitions
      At line 116 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: CRP_Key unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 120 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: .text unused
ADC_IRQHandler 000000A4

Symbol: ADC_IRQHandler
   Definitions
      At line 325 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 99 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 289 in file RTE\Device\LPC1768\startup_LPC17xx.s

BOD_IRQHandler 000000A4

Symbol: BOD_IRQHandler
   Definitions
      At line 326 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 100 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 290 in file RTE\Device\LPC1768\startup_LPC17xx.s

BusFault_Handler 00000098

Symbol: BusFault_Handler
   Definitions
      At line 238 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 64 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 239 in file RTE\Device\LPC1768\startup_LPC17xx.s

CANActivity_IRQHandler 000000A4

Symbol: CANActivity_IRQHandler
   Definitions
      At line 337 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 111 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 301 in file RTE\Device\LPC1768\startup_LPC17xx.s

CAN_IRQHandler 000000A4

Symbol: CAN_IRQHandler
   Definitions
      At line 328 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 102 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 292 in file RTE\Device\LPC1768\startup_LPC17xx.s

DMA_IRQHandler 000000A4

Symbol: DMA_IRQHandler
   Definitions
      At line 329 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 103 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 293 in file RTE\Device\LPC1768\startup_LPC17xx.s

DebugMon_Handler 0000009E

Symbol: DebugMon_Handler
   Definitions
      At line 252 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 71 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 253 in file RTE\Device\LPC1768\startup_LPC17xx.s

Default_Handler 000000A4

Symbol: Default_Handler
   Definitions
      At line 265 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: Default_Handler unused
EINT0_IRQHandler 000000A4

Symbol: EINT0_IRQHandler
   Definitions
      At line 321 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 95 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 285 in file RTE\Device\LPC1768\startup_LPC17xx.s

EINT1_IRQHandler 000000A4

Symbol: EINT1_IRQHandler
   Definitions
      At line 322 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 96 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 286 in file RTE\Device\LPC1768\startup_LPC17xx.s

EINT2_IRQHandler 000000A4

Symbol: EINT2_IRQHandler
   Definitions
      At line 323 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 97 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 287 in file RTE\Device\LPC1768\startup_LPC17xx.s

EINT3_IRQHandler 000000A4

Symbol: EINT3_IRQHandler
   Definitions
      At line 324 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 98 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 288 in file RTE\Device\LPC1768\startup_LPC17xx.s

ENET_IRQHandler 000000A4

Symbol: ENET_IRQHandler



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 331 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 105 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 295 in file RTE\Device\LPC1768\startup_LPC17xx.s

GoldbachConjecture 00000036

Symbol: GoldbachConjecture
   Definitions
      At line 165 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 166 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: GoldbachConjecture used once
HardFault_Handler 00000094

Symbol: HardFault_Handler
   Definitions
      At line 228 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 62 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 229 in file RTE\Device\LPC1768\startup_LPC17xx.s

I2C0_IRQHandler 000000A4

Symbol: I2C0_IRQHandler
   Definitions
      At line 313 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 87 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 277 in file RTE\Device\LPC1768\startup_LPC17xx.s

I2C1_IRQHandler 000000A4

Symbol: I2C1_IRQHandler
   Definitions
      At line 314 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 88 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 278 in file RTE\Device\LPC1768\startup_LPC17xx.s

I2C2_IRQHandler 000000A4

Symbol: I2C2_IRQHandler
   Definitions
      At line 315 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 89 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 279 in file RTE\Device\LPC1768\startup_LPC17xx.s

I2S_IRQHandler 000000A4

Symbol: I2S_IRQHandler
   Definitions
      At line 330 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 104 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 294 in file RTE\Device\LPC1768\startup_LPC17xx.s




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

MCPWM_IRQHandler 000000A4

Symbol: MCPWM_IRQHandler
   Definitions
      At line 333 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 107 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 297 in file RTE\Device\LPC1768\startup_LPC17xx.s

MemManage_Handler 00000096

Symbol: MemManage_Handler
   Definitions
      At line 233 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 63 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 234 in file RTE\Device\LPC1768\startup_LPC17xx.s

NMI_Handler 00000092

Symbol: NMI_Handler
   Definitions
      At line 223 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 61 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 224 in file RTE\Device\LPC1768\startup_LPC17xx.s

PLL0_IRQHandler 000000A4

Symbol: PLL0_IRQHandler
   Definitions
      At line 319 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 93 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 283 in file RTE\Device\LPC1768\startup_LPC17xx.s

PLL1_IRQHandler 000000A4

Symbol: PLL1_IRQHandler
   Definitions
      At line 335 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 109 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 299 in file RTE\Device\LPC1768\startup_LPC17xx.s

PWM1_IRQHandler 000000A4

Symbol: PWM1_IRQHandler
   Definitions
      At line 312 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 86 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 276 in file RTE\Device\LPC1768\startup_LPC17xx.s

PendSV_Handler 000000A0

Symbol: PendSV_Handler
   Definitions
      At line 256 in file RTE\Device\LPC1768\startup_LPC17xx.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 73 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 257 in file RTE\Device\LPC1768\startup_LPC17xx.s

QEI_IRQHandler 000000A4

Symbol: QEI_IRQHandler
   Definitions
      At line 334 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 108 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 298 in file RTE\Device\LPC1768\startup_LPC17xx.s

RIT_IRQHandler 000000A4

Symbol: RIT_IRQHandler
   Definitions
      At line 332 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 106 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 296 in file RTE\Device\LPC1768\startup_LPC17xx.s

RTC_IRQHandler 000000A4

Symbol: RTC_IRQHandler
   Definitions
      At line 320 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 94 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 284 in file RTE\Device\LPC1768\startup_LPC17xx.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 125 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 60 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 126 in file RTE\Device\LPC1768\startup_LPC17xx.s

SPI_IRQHandler 000000A4

Symbol: SPI_IRQHandler
   Definitions
      At line 316 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 90 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 280 in file RTE\Device\LPC1768\startup_LPC17xx.s

SSP0_IRQHandler 000000A4

Symbol: SSP0_IRQHandler
   Definitions
      At line 317 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 91 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 281 in file RTE\Device\LPC1768\startup_LPC17xx.s

SSP1_IRQHandler 000000A4



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols


Symbol: SSP1_IRQHandler
   Definitions
      At line 318 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 92 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 282 in file RTE\Device\LPC1768\startup_LPC17xx.s

SVC_Handler 0000009C

Symbol: SVC_Handler
   Definitions
      At line 247 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 70 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 248 in file RTE\Device\LPC1768\startup_LPC17xx.s

SysTick_Handler 000000A2

Symbol: SysTick_Handler
   Definitions
      At line 260 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 74 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 261 in file RTE\Device\LPC1768\startup_LPC17xx.s

TIMER0_IRQHandler 000000A4

Symbol: TIMER0_IRQHandler
   Definitions
      At line 304 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 78 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 268 in file RTE\Device\LPC1768\startup_LPC17xx.s

TIMER1_IRQHandler 000000A4

Symbol: TIMER1_IRQHandler
   Definitions
      At line 305 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 79 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 269 in file RTE\Device\LPC1768\startup_LPC17xx.s

TIMER2_IRQHandler 000000A4

Symbol: TIMER2_IRQHandler
   Definitions
      At line 306 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 80 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 270 in file RTE\Device\LPC1768\startup_LPC17xx.s

TIMER3_IRQHandler 000000A4

Symbol: TIMER3_IRQHandler
   Definitions
      At line 307 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

      At line 81 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 271 in file RTE\Device\LPC1768\startup_LPC17xx.s

UART0_IRQHandler 000000A4

Symbol: UART0_IRQHandler
   Definitions
      At line 308 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 82 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 272 in file RTE\Device\LPC1768\startup_LPC17xx.s

UART1_IRQHandler 000000A4

Symbol: UART1_IRQHandler
   Definitions
      At line 309 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 83 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 273 in file RTE\Device\LPC1768\startup_LPC17xx.s

UART2_IRQHandler 000000A4

Symbol: UART2_IRQHandler
   Definitions
      At line 310 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 84 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 274 in file RTE\Device\LPC1768\startup_LPC17xx.s

UART3_IRQHandler 000000A4

Symbol: UART3_IRQHandler
   Definitions
      At line 311 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 85 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 275 in file RTE\Device\LPC1768\startup_LPC17xx.s

USBActivity_IRQHandler 000000A4

Symbol: USBActivity_IRQHandler
   Definitions
      At line 336 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 110 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 300 in file RTE\Device\LPC1768\startup_LPC17xx.s

USB_IRQHandler 000000A4

Symbol: USB_IRQHandler
   Definitions
      At line 327 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 101 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 291 in file RTE\Device\LPC1768\startup_LPC17xx.s

UsageFault_Handler 0000009A




ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols

Symbol: UsageFault_Handler
   Definitions
      At line 243 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 65 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 244 in file RTE\Device\LPC1768\startup_LPC17xx.s

WDT_IRQHandler 000000A4

Symbol: WDT_IRQHandler
   Definitions
      At line 303 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 77 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 267 in file RTE\Device\LPC1768\startup_LPC17xx.s

__user_initial_stackheap 000000A8

Symbol: __user_initial_stackheap
   Definitions
      At line 359 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 358 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: __user_initial_stackheap used once
continue 00000068

Symbol: continue
   Definitions
      At line 188 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 178 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 185 in file RTE\Device\LPC1768\startup_LPC17xx.s

cycleGConjecture 00000044

Symbol: cycleGConjecture
   Definitions
      At line 173 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 191 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: cycleGConjecture used once
cyclePrime 00000016

Symbol: cyclePrime
   Definitions
      At line 152 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 159 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: cyclePrime used once
endGConjecture 00000074

Symbol: endGConjecture
   Definitions
      At line 192 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 171 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 187 in file RTE\Device\LPC1768\startup_LPC17xx.s

endPrimeNumber 00000032



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols


Symbol: endPrimeNumber
   Definitions
      At line 161 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 150 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 155 in file RTE\Device\LPC1768\startup_LPC17xx.s

isPrimeNumber 0000000A

Symbol: isPrimeNumber
   Definitions
      At line 146 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 175 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 182 in file RTE\Device\LPC1768\startup_LPC17xx.s

startTimer 00000078

Symbol: startTimer
   Definitions
      At line 200 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 201 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: startTimer used once
stop 00000008

Symbol: stop
   Definitions
      At line 143 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 143 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: stop used once
57 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Control E000E010

Symbol: Control
   Definitions
      At line 196 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 206 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 215 in file RTE\Device\LPC1768\startup_LPC17xx.s

Current E000E018

Symbol: Current
   Definitions
      At line 198 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 212 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: Current used once
Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 42 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 46 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 363 in file RTE\Device\LPC1768\startup_LPC17xx.s

Reload E000E014

Symbol: Reload
   Definitions
      At line 197 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 210 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: Reload used once
Stack_Size 00000200

Symbol: Stack_Size
   Definitions
      At line 31 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 34 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 362 in file RTE\Device\LPC1768\startup_LPC17xx.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SystemInit 00000000

Symbol: SystemInit
   Definitions
      At line 137 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 139 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: SystemInit used once
__main 00000000

Symbol: __main
   Definitions
      At line 138 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 141 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 357 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: __use_two_region_memory unused
3 symbols
416 symbols in table

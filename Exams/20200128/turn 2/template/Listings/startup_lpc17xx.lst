


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ********************//**
    2 00000000         ; * @file     startup_LPC17xx.s
    3 00000000         ; * @brief    CMSIS Cortex-M3 Core Device Startup File f
                       or
    4 00000000         ; *           NXP LPC17xx Device Series
    5 00000000         ; * @version  V1.10
    6 00000000         ; * @date     06. April 2011
    7 00000000         ; *
    8 00000000         ; * @note
    9 00000000         ; * Copyright (C) 2009-2011 ARM Limited. All rights rese
                       rved.
   10 00000000         ; *
   11 00000000         ; * @par
   12 00000000         ; * ARM Limited (ARM) is supplying this software for use
                        with Cortex-M
   13 00000000         ; * processor based microcontrollers.  This file can be 
                       freely distributed
   14 00000000         ; * within development tools that are supporting such AR
                       M based processors.
   15 00000000         ; *
   16 00000000         ; * @par
   17 00000000         ; * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, W
                       HETHER EXPRESS, IMPLIED
   18 00000000         ; * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
                        WARRANTIES OF
   19 00000000         ; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                        APPLY TO THIS SOFTWARE.
   20 00000000         ; * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR S
                       PECIAL, INCIDENTAL, OR
   21 00000000         ; * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ; *
   23 00000000         ; ******************************************************
                       ************************/
   24 00000000         
   25 00000000         ; *------- <<< Use Configuration Wizard in Context Menu 
                       >>> ------------------
   26 00000000         
   27 00000000         ; <h> Stack Configuration
   28 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ; </h>
   30 00000000         
   31 00000000 00000200 
                       Stack_Size
                               EQU              0x00000200
   32 00000000         
   33 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   34 00000000         Stack_Mem
                               SPACE            Stack_Size
   35 00000200         __initial_sp
   36 00000200         
   37 00000200         
   38 00000200         ; <h> Heap Configuration
   39 00000200         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   40 00000200         ; </h>
   41 00000200         
   42 00000200 00000000 
                       Heap_Size



ARM Macro Assembler    Page 2 


                               EQU              0x00000000
   43 00000200         
   44 00000200                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   45 00000000         __heap_base
   46 00000000         Heap_Mem
                               SPACE            Heap_Size
   47 00000000         __heap_limit
   48 00000000         
   49 00000000         
   50 00000000                 PRESERVE8
   51 00000000                 THUMB
   52 00000000         
   53 00000000         
   54 00000000         ; Vector Table Mapped to Address 0 at Reset
   55 00000000         
   56 00000000                 AREA             RESET, DATA, READONLY
   57 00000000                 EXPORT           __Vectors
   58 00000000         
   59 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   60 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   61 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   62 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   63 00000010 00000000        DCD              MemManage_Handler 
                                                            ; MPU Fault Handler
                                                            
   64 00000014 00000000        DCD              BusFault_Handler 
                                                            ; Bus Fault Handler
                                                            
   65 00000018 00000000        DCD              UsageFault_Handler ; Usage Faul
                                                            t Handler
   66 0000001C 00000000        DCD              0           ; Reserved
   67 00000020 00000000        DCD              0           ; Reserved
   68 00000024 00000000        DCD              0           ; Reserved
   69 00000028 00000000        DCD              0           ; Reserved
   70 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
   71 00000030 00000000        DCD              DebugMon_Handler ; Debug Monito
                                                            r Handler
   72 00000034 00000000        DCD              0           ; Reserved
   73 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
   74 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
   75 00000040         
   76 00000040         ; External Interrupts
   77 00000040 00000000        DCD              WDT_IRQHandler ; 16: Watchdog T
                                                            imer
   78 00000044 00000000        DCD              TIMER0_IRQHandler ; 17: Timer0
   79 00000048 00000000        DCD              TIMER1_IRQHandler ; 18: Timer1
   80 0000004C 00000000        DCD              TIMER2_IRQHandler ; 19: Timer2
   81 00000050 00000000        DCD              TIMER3_IRQHandler ; 20: Timer3
   82 00000054 00000000        DCD              UART0_IRQHandler ; 21: UART0
   83 00000058 00000000        DCD              UART1_IRQHandler ; 22: UART1
   84 0000005C 00000000        DCD              UART2_IRQHandler ; 23: UART2
   85 00000060 00000000        DCD              UART3_IRQHandler ; 24: UART3
   86 00000064 00000000        DCD              PWM1_IRQHandler ; 25: PWM1



ARM Macro Assembler    Page 3 


   87 00000068 00000000        DCD              I2C0_IRQHandler ; 26: I2C0
   88 0000006C 00000000        DCD              I2C1_IRQHandler ; 27: I2C1
   89 00000070 00000000        DCD              I2C2_IRQHandler ; 28: I2C2
   90 00000074 00000000        DCD              SPI_IRQHandler ; 29: SPI
   91 00000078 00000000        DCD              SSP0_IRQHandler ; 30: SSP0
   92 0000007C 00000000        DCD              SSP1_IRQHandler ; 31: SSP1
   93 00000080 00000000        DCD              PLL0_IRQHandler ; 32: PLL0 Lock
                                                             (Main PLL)
   94 00000084 00000000        DCD              RTC_IRQHandler ; 33: Real Time 
                                                            Clock
   95 00000088 00000000        DCD              EINT0_IRQHandler ; 34: External
                                                             Interrupt 0
   96 0000008C 00000000        DCD              EINT1_IRQHandler ; 35: External
                                                             Interrupt 1
   97 00000090 00000000        DCD              EINT2_IRQHandler ; 36: External
                                                             Interrupt 2
   98 00000094 00000000        DCD              EINT3_IRQHandler ; 37: External
                                                             Interrupt 3
   99 00000098 00000000        DCD              ADC_IRQHandler 
                                                            ; 38: A/D Converter
                                                            
  100 0000009C 00000000        DCD              BOD_IRQHandler ; 39: Brown-Out 
                                                            Detect
  101 000000A0 00000000        DCD              USB_IRQHandler ; 40: USB
  102 000000A4 00000000        DCD              CAN_IRQHandler ; 41: CAN
  103 000000A8 00000000        DCD              DMA_IRQHandler ; 42: General Pu
                                                            rpose DMA
  104 000000AC 00000000        DCD              I2S_IRQHandler ; 43: I2S
  105 000000B0 00000000        DCD              ENET_IRQHandler ; 44: Ethernet
  106 000000B4 00000000        DCD              RIT_IRQHandler ; 45: Repetitive
                                                             Interrupt Timer
  107 000000B8 00000000        DCD              MCPWM_IRQHandler ; 46: Motor Co
                                                            ntrol PWM
  108 000000BC 00000000        DCD              QEI_IRQHandler ; 47: Quadrature
                                                             Encoder Interface
  109 000000C0 00000000        DCD              PLL1_IRQHandler ; 48: PLL1 Lock
                                                             (USB PLL)
  110 000000C4 00000000        DCD              USBActivity_IRQHandler ; 49: US
                                                            B Activity interrup
                                                            t to wakeup
  111 000000C8 00000000        DCD              CANActivity_IRQHandler ; 50: CA
                                                            N Activity interrup
                                                            t to wakeup
  112 000000CC         
  113 000000CC         
  114 000000CC                 IF               :LNOT::DEF:NO_CRP
  115 000000CC                 AREA             |.ARM.__at_0x02FC|, CODE, READO
NLY
  116 00000000 FFFFFFFF 
                       CRP_Key DCD              0xFFFFFFFF
  117 00000004                 ENDIF
  118 00000004         
  119 00000004         
  120 00000004                 AREA             |.text|, CODE, READONLY
  121 00000000         
  122 00000000         
  123 00000000         ; Reset Handler
  124 00000000         
  125 00000000         Reset_Handler



ARM Macro Assembler    Page 4 


                               PROC
  126 00000000                 EXPORT           Reset_Handler             [WEAK
]
  127 00000000         
  128 00000000         ; item 1
  129 00000000         ;MOV r0, #90
  130 00000000         ;MOV r1, #89
  131 00000000         ;BL binaryGCD
  132 00000000         
  133 00000000         ; remove comments to solve item 2
  134 00000000         ;MOV r0, #7560
  135 00000000         ;MOV r1, #5280
  136 00000000         ;BL binaryExtendedGCD
  137 00000000         
  138 00000000         ; remove comments to solve item 3
  139 00000000                 IMPORT           SystemInit
  140 00000000                 IMPORT           __main
  141 00000000 4856            LDR              R0, =SystemInit
  142 00000002 4780            BLX              R0
  143 00000004 4856            LDR              R0, =__main
  144 00000006 4700            BX               R0
  145 00000008 E7FE    stop    B                stop
  146 0000000A                 ENDP
  147 0000000A         
  148 0000000A         binaryGCD
                               PROC
  149 0000000A                 EXPORT           binaryGCD
  150 0000000A B510            PUSH             {r4,LR}
  151 0000000C         ; r0 = x
  152 0000000C         ; r1 = y
  153 0000000C EA82 0202       EOR              r2, r2      ; r2 = g
  154 00000010 F000 0301 
                       firstStepGCP
                               AND              r3, r0, #1  ; take first bit
  155 00000014 EA4F 0343       LSL              r3, #1      ; move the bit in t
                                                            he second position
  156 00000018 F001 0401       AND              r4, r1, #1  ; take first bit
  157 0000001C EA43 0304       ORR              r3, r3, r4  ; union of results
  158 00000020 2B00            CMP              r3, #2_00
  159 00000022 D106            BNE              continueGCD ; if one of two isn
                                                            't even continue GC
                                                            D
  160 00000024         ; if both are even
  161 00000024 EA4F 0050       LSR              r0, #1      ; x/2
  162 00000028 EA4F 0151       LSR              r1, #1      ; y/2
  163 0000002C F102 0201       ADD              r2, #1      ; g = g + 1
  164 00000030 E7EE            B                firstStepGCP
  165 00000032         ; ------ FIRST METHOD FOR CHECKING PARITY -----
  166 00000032         ; PRE-DIVIDING THE NUMBER
  167 00000032 0840    continueGCD
                               LSRS             r0, #1      ; pre-divide by 2
  168 00000034 D3FD            BCC              continueGCD ; if r0 was even co
                                                            ntinue GCD
  169 00000036         ; r0 was odd so restore value
  170 00000036 EA4F 0040       LSL              r0, #1      ; multiple by 2
  171 0000003A F100 0001       ADD              r0, #1      ; add trunced val
  172 0000003E         ; ------ SECOND METHOD FOR CHECKING PARITY ----- 
  173 0000003E         ; WITH TST
  174 0000003E F011 0F01 



ARM Macro Assembler    Page 5 


                       yEvenLoop
                               TST              r1, #1      ; check LSB
  175 00000042 D102            BNE              continueAfterY ; y is odd
  176 00000044         ; y is even
  177 00000044 EA4F 0151       LSR              r1, #1
  178 00000048 E7F9            B                yEvenLoop
  179 0000004A 4288    continueAfterY
                               CMP              r0, r1
  180 0000004C D202            BHS              xgtey       ; if x >= y go to x
                                                            gtey
  181 0000004E         ; x < y
  182 0000004E EBA1 0100       SUB              r1, r1, r0  ; y = y - x
  183 00000052 E001            B                continueAfterIf
  184 00000054         ; x >= y
  185 00000054 EBA0 0001 
                       xgtey   SUB              r0, r0, r1  ; x = x - Y
  186 00000058 2800    continueAfterIf
                               CMP              r0, #0
  187 0000005A D1EA            BNE              continueGCD ; if x != 0 loop 
  188 0000005C FA01 F002       LSL              r0, r1, r2  ;  return y*2^g
  189 00000060 BD10            POP              {r4,PC}
  190 00000062                 ENDP
  191 00000062         
  192 00000062         binaryExtendedGCD
                               PROC
  193 00000062                 EXPORT           binaryExtendedGCD
  194 00000062 E92D 47F0       PUSH             {r4-r10,LR}
  195 00000066         ; r0 = x
  196 00000066         ; r1 = y
  197 00000066 EA82 0202       EOR              r2, r2      ; r2 = g
  198 0000006A F000 0301 
                       firstStepExt
                               AND              r3, r0, #1  ; take first bit
  199 0000006E EA4F 0343       LSL              r3, #1      ; move the bit in t
                                                            he second position
  200 00000072 F001 0401       AND              r4, r1, #1  ; take first bit
  201 00000076 EA43 0304       ORR              r3, r3, r4  ; union of results
  202 0000007A 2B00            CMP              r3, #2_00
  203 0000007C D106            BNE              continueAfter ; if one of two i
                                                            sn't even continue 
                                                            GCD
  204 0000007E         ; if both are even
  205 0000007E EA4F 0050       LSR              r0, #1      ; x/2
  206 00000082 EA4F 0151       LSR              r1, #1      ; y/2
  207 00000086 F102 0201       ADD              r2, #1      ; g = g + 1
  208 0000008A E7EE            B                firstStepExt
  209 0000008C 4603    continueAfter
                               MOV              r3, r0      ; u = x
  210 0000008E 460C            MOV              r4, r1      ; v = y
  211 00000090 F04F 0501       MOV              r5, #1      ; A = 1
  212 00000094 F04F 0600       MOV              r6, #0      ; B = 0
  213 00000098 F04F 0700       MOV              r7, #0      ; C = 0
  214 0000009C F04F 0801       MOV              r8, #1      ; D = 0
  215 000000A0 F010 0F01 
                       xEvenLoopExt
                               TST              r0, #1      ; check LSB
  216 000000A4 D119            BNE              yEvenLoopExt ; x is odd
  217 000000A6         ; x is even
  218 000000A6 EA4F 0050       LSR              r0, #1      ; x = x / 2



ARM Macro Assembler    Page 6 


  219 000000AA F005 0901       AND              r9, r5, #1  ; take LSB of A
  220 000000AE EA4F 0949       LSL              r9, #1      ; move the bit in s
                                                            econd bit
  221 000000B2 F006 0A01       AND              r10, r6, #1 ; take LSB of B
  222 000000B6 EA49 090A       ORR              r9, r9, r10 ; union of results
  223 000000BA F1B9 0F00       CMP              r9, #2_00
  224 000000BE D007            BEQ              ABEven      ; if both are even
  225 000000C0         ; one of two isn't even
  226 000000C0 4425            ADD              r5, r4      ; A = A + v
  227 000000C2 EA4F 0565       ASR              r5, #1      ; A/2
  228 000000C6 EBA6 0603       SUB              r6, r3      ; B = B - u
  229 000000CA EA4F 0666       ASR              r6, #1      ; B/2
  230 000000CE E7E7            B                xEvenLoopExt
  231 000000D0         ABEven                               ; A and B are both 
                                                            even
  232 000000D0 EA4F 0565       ASR              r5, #1      ; A/2
  233 000000D4 EA4F 0666       ASR              r6, #1      ; B/2
  234 000000D8 E7E2            B                xEvenLoopExt
  235 000000DA F011 0F01 
                       yEvenLoopExt
                               TST              r1, #1      ; check LSB
  236 000000DE D119            BNE              continueAfterYExt ; y is odd
  237 000000E0         ; y is even
  238 000000E0 EA4F 0151       LSR              r1, #1      ; y = y / 2
  239 000000E4 F007 0901       AND              r9, r7, #1  ; take LSB of C
  240 000000E8 EA4F 0949       LSL              r9, #1      ; move the bit in s
                                                            econd bit
  241 000000EC F008 0A01       AND              r10, r8, #1 ; take LSB of D
  242 000000F0 EA49 090A       ORR              r9, r9, r10 ; union of results
  243 000000F4 F1B9 0F00       CMP              r9, #2_00
  244 000000F8 D007            BEQ              CDEven      ; if both are even
  245 000000FA         ; one of two isn't even
  246 000000FA 4427            ADD              r7, r4      ; C = C + v
  247 000000FC EA4F 0767       ASR              r7, #1      ; C/2
  248 00000100 EBA8 0803       SUB              r8, r3      ; D = D - u
  249 00000104 EA4F 0868       ASR              r8, #1      ; D/2
  250 00000108 E7E7            B                yEvenLoopExt
  251 0000010A         CDEven                               ; A and B are both 
                                                            even
  252 0000010A EA4F 0767       ASR              r7, #1      ; C/2
  253 0000010E EA4F 0868       ASR              r8, #1      ; D/2
  254 00000112 E7E2            B                yEvenLoopExt
  255 00000114 4288    continueAfterYExt
                               CMP              r0, r1
  256 00000116 D206            BHS              xgteyExt    ; if x >= y go to x
                                                            gteyExt
  257 00000118         ; x < y
  258 00000118 EBA1 0100       SUB              r1, r1, r0  ; y = y - x
  259 0000011C EBA7 0705       SUB              r7, r5      ; C = C - A
  260 00000120 EBA8 0806       SUB              r8, r6      ; D = D - B
  261 00000124 E005            B                continueAfterIfExt
  262 00000126         ; x >= y
  263 00000126 EBA0 0001 
                       xgteyExt
                               SUB              r0, r0, r1  ; x = x - y
  264 0000012A EBA5 0507       SUB              r5, r7      ; A = A - C
  265 0000012E EBA6 0608       SUB              r6, r8      ; B = B - D
  266 00000132 2800    continueAfterIfExt
                               CMP              r0, #0



ARM Macro Assembler    Page 7 


  267 00000134 D1B4            BNE              xEvenLoopExt ; if x != 0 loop 
  268 00000136 4638            MOV              r0, r7      ;
  269 00000138 E8BD 87F0       POP              {r4-r10,PC}
  270 0000013C                 ENDP
  271 0000013C         
  272 0000013C         
  273 0000013C         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  274 0000013C         
  275 0000013C         NMI_Handler
                               PROC
  276 0000013C                 EXPORT           NMI_Handler               [WEAK
]
  277 0000013C E7FE            B                .
  278 0000013E                 ENDP
  280 0000013E         HardFault_Handler
                               PROC
  281 0000013E                 EXPORT           HardFault_Handler         [WEAK
]
  282 0000013E E7FE            B                .
  283 00000140                 ENDP
  285 00000140         MemManage_Handler
                               PROC
  286 00000140                 EXPORT           MemManage_Handler         [WEAK
]
  287 00000140 E7FE            B                .
  288 00000142                 ENDP
  290 00000142         BusFault_Handler
                               PROC
  291 00000142                 EXPORT           BusFault_Handler          [WEAK
]
  292 00000142 E7FE            B                .
  293 00000144                 ENDP
  295 00000144         UsageFault_Handler
                               PROC
  296 00000144                 EXPORT           UsageFault_Handler        [WEAK
]
  297 00000144 E7FE            B                .
  298 00000146                 ENDP
  299 00000146         SVC_Handler
                               PROC
  300 00000146                 EXPORT           SVC_Handler               [WEAK
]
  301 00000146 E7FE            B                .
  302 00000148                 ENDP
  304 00000148         DebugMon_Handler
                               PROC
  305 00000148                 EXPORT           DebugMon_Handler          [WEAK
]
  306 00000148 E7FE            B                .
  307 0000014A                 ENDP
  308 0000014A         PendSV_Handler
                               PROC
  309 0000014A                 EXPORT           PendSV_Handler            [WEAK
]
  310 0000014A E7FE            B                .
  311 0000014C                 ENDP
  312 0000014C         SysTick_Handler
                               PROC



ARM Macro Assembler    Page 8 


  313 0000014C                 EXPORT           SysTick_Handler           [WEAK
]
  314 0000014C E7FE            B                .
  315 0000014E                 ENDP
  316 0000014E         
  317 0000014E         Default_Handler
                               PROC
  318 0000014E         
  319 0000014E                 EXPORT           WDT_IRQHandler            [WEAK
]
  320 0000014E                 EXPORT           TIMER0_IRQHandler         [WEAK
]
  321 0000014E                 EXPORT           TIMER1_IRQHandler         [WEAK
]
  322 0000014E                 EXPORT           TIMER2_IRQHandler         [WEAK
]
  323 0000014E                 EXPORT           TIMER3_IRQHandler         [WEAK
]
  324 0000014E                 EXPORT           UART0_IRQHandler          [WEAK
]
  325 0000014E                 EXPORT           UART1_IRQHandler          [WEAK
]
  326 0000014E                 EXPORT           UART2_IRQHandler          [WEAK
]
  327 0000014E                 EXPORT           UART3_IRQHandler          [WEAK
]
  328 0000014E                 EXPORT           PWM1_IRQHandler           [WEAK
]
  329 0000014E                 EXPORT           I2C0_IRQHandler           [WEAK
]
  330 0000014E                 EXPORT           I2C1_IRQHandler           [WEAK
]
  331 0000014E                 EXPORT           I2C2_IRQHandler           [WEAK
]
  332 0000014E                 EXPORT           SPI_IRQHandler            [WEAK
]
  333 0000014E                 EXPORT           SSP0_IRQHandler           [WEAK
]
  334 0000014E                 EXPORT           SSP1_IRQHandler           [WEAK
]
  335 0000014E                 EXPORT           PLL0_IRQHandler           [WEAK
]
  336 0000014E                 EXPORT           RTC_IRQHandler            [WEAK
]
  337 0000014E                 EXPORT           EINT0_IRQHandler          [WEAK
]
  338 0000014E                 EXPORT           EINT1_IRQHandler          [WEAK
]
  339 0000014E                 EXPORT           EINT2_IRQHandler          [WEAK
]
  340 0000014E                 EXPORT           EINT3_IRQHandler          [WEAK
]
  341 0000014E                 EXPORT           ADC_IRQHandler            [WEAK
]
  342 0000014E                 EXPORT           BOD_IRQHandler            [WEAK
]
  343 0000014E                 EXPORT           USB_IRQHandler            [WEAK
]
  344 0000014E                 EXPORT           CAN_IRQHandler            [WEAK



ARM Macro Assembler    Page 9 


]
  345 0000014E                 EXPORT           DMA_IRQHandler            [WEAK
]
  346 0000014E                 EXPORT           I2S_IRQHandler            [WEAK
]
  347 0000014E                 EXPORT           ENET_IRQHandler           [WEAK
]
  348 0000014E                 EXPORT           RIT_IRQHandler            [WEAK
]
  349 0000014E                 EXPORT           MCPWM_IRQHandler          [WEAK
]
  350 0000014E                 EXPORT           QEI_IRQHandler            [WEAK
]
  351 0000014E                 EXPORT           PLL1_IRQHandler           [WEAK
]
  352 0000014E                 EXPORT           USBActivity_IRQHandler    [WEAK
]
  353 0000014E                 EXPORT           CANActivity_IRQHandler    [WEAK
]
  354 0000014E         
  355 0000014E         WDT_IRQHandler
  356 0000014E         TIMER0_IRQHandler
  357 0000014E         TIMER1_IRQHandler
  358 0000014E         TIMER2_IRQHandler
  359 0000014E         TIMER3_IRQHandler
  360 0000014E         UART0_IRQHandler
  361 0000014E         UART1_IRQHandler
  362 0000014E         UART2_IRQHandler
  363 0000014E         UART3_IRQHandler
  364 0000014E         PWM1_IRQHandler
  365 0000014E         I2C0_IRQHandler
  366 0000014E         I2C1_IRQHandler
  367 0000014E         I2C2_IRQHandler
  368 0000014E         SPI_IRQHandler
  369 0000014E         SSP0_IRQHandler
  370 0000014E         SSP1_IRQHandler
  371 0000014E         PLL0_IRQHandler
  372 0000014E         RTC_IRQHandler
  373 0000014E         EINT0_IRQHandler
  374 0000014E         EINT1_IRQHandler
  375 0000014E         EINT2_IRQHandler
  376 0000014E         EINT3_IRQHandler
  377 0000014E         ADC_IRQHandler
  378 0000014E         BOD_IRQHandler
  379 0000014E         USB_IRQHandler
  380 0000014E         CAN_IRQHandler
  381 0000014E         DMA_IRQHandler
  382 0000014E         I2S_IRQHandler
  383 0000014E         ENET_IRQHandler
  384 0000014E         RIT_IRQHandler
  385 0000014E         MCPWM_IRQHandler
  386 0000014E         QEI_IRQHandler
  387 0000014E         PLL1_IRQHandler
  388 0000014E         USBActivity_IRQHandler
  389 0000014E         CANActivity_IRQHandler
  390 0000014E         
  391 0000014E E7FE            B                .
  392 00000150         
  393 00000150                 ENDP



ARM Macro Assembler    Page 10 


  394 00000150         
  395 00000150         
  396 00000150                 ALIGN
  397 00000150         
  398 00000150         
  399 00000150         ; User Initial Stack & Heap
  400 00000150         
  401 00000150                 IF               :DEF:__MICROLIB
  408 00000150         
  409 00000150                 IMPORT           __use_two_region_memory
  410 00000150                 EXPORT           __user_initial_stackheap
  411 00000150         __user_initial_stackheap
  412 00000150         
  413 00000150 4804            LDR              R0, =  Heap_Mem
  414 00000152 4905            LDR              R1, =(Stack_Mem + Stack_Size)
  415 00000154 4A03            LDR              R2, = (Heap_Mem +  Heap_Size)
  416 00000156 4B05            LDR              R3, = Stack_Mem
  417 00000158 4770            BX               LR
  418 0000015A         
  419 0000015A 00 00           ALIGN
  420 0000015C         
  421 0000015C                 ENDIF
  422 0000015C         
  423 0000015C         
  424 0000015C                 END
              00000000 
              00000000 
              00000000 
              00000200 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\startup_lpc17xx.d -o.\objects\startup_lpc17xx.o -I.\RTE\
Device\LPC1768 -I.\RTE\_Target_1 -IC:\Users\asus\AppData\Local\Arm\Packs\ARM\CM
SIS\5.8.0\CMSIS\Core\Include -IC:\Users\asus\AppData\Local\Arm\Packs\Keil\LPC17
00_DFP\2.7.1\Device\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_
VERSION SETA 536" --predefine="_RTE_ SETA 1" --predefine="LPC175x_6x SETA 1" --
predefine="_RTE_ SETA 1" --list=.\listings\startup_lpc17xx.lst RTE\Device\LPC17
68\startup_LPC17xx.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 33 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 34 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 414 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 416 in file RTE\Device\LPC1768\startup_LPC17xx.s

__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 35 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 59 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 44 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 46 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 413 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 415 in file RTE\Device\LPC1768\startup_LPC17xx.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 45 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 47 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 56 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 59 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 57 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x02FC 00000000

Symbol: .ARM.__at_0x02FC
   Definitions
      At line 115 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: .ARM.__at_0x02FC unused
CRP_Key 00000000

Symbol: CRP_Key
   Definitions
      At line 116 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: CRP_Key unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 120 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: .text unused
ABEven 000000D0

Symbol: ABEven
   Definitions
      At line 231 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 224 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: ABEven used once
ADC_IRQHandler 0000014E

Symbol: ADC_IRQHandler
   Definitions
      At line 377 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 99 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 341 in file RTE\Device\LPC1768\startup_LPC17xx.s

BOD_IRQHandler 0000014E

Symbol: BOD_IRQHandler
   Definitions
      At line 378 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 100 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 342 in file RTE\Device\LPC1768\startup_LPC17xx.s

BusFault_Handler 00000142

Symbol: BusFault_Handler
   Definitions
      At line 290 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 64 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 291 in file RTE\Device\LPC1768\startup_LPC17xx.s

CANActivity_IRQHandler 0000014E

Symbol: CANActivity_IRQHandler
   Definitions
      At line 389 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 111 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 353 in file RTE\Device\LPC1768\startup_LPC17xx.s

CAN_IRQHandler 0000014E

Symbol: CAN_IRQHandler
   Definitions
      At line 380 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 102 in file RTE\Device\LPC1768\startup_LPC17xx.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 344 in file RTE\Device\LPC1768\startup_LPC17xx.s

CDEven 0000010A

Symbol: CDEven
   Definitions
      At line 251 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 244 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: CDEven used once
DMA_IRQHandler 0000014E

Symbol: DMA_IRQHandler
   Definitions
      At line 381 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 103 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 345 in file RTE\Device\LPC1768\startup_LPC17xx.s

DebugMon_Handler 00000148

Symbol: DebugMon_Handler
   Definitions
      At line 304 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 71 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 305 in file RTE\Device\LPC1768\startup_LPC17xx.s

Default_Handler 0000014E

Symbol: Default_Handler
   Definitions
      At line 317 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: Default_Handler unused
EINT0_IRQHandler 0000014E

Symbol: EINT0_IRQHandler
   Definitions
      At line 373 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 95 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 337 in file RTE\Device\LPC1768\startup_LPC17xx.s

EINT1_IRQHandler 0000014E

Symbol: EINT1_IRQHandler
   Definitions
      At line 374 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 96 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 338 in file RTE\Device\LPC1768\startup_LPC17xx.s

EINT2_IRQHandler 0000014E

Symbol: EINT2_IRQHandler
   Definitions
      At line 375 in file RTE\Device\LPC1768\startup_LPC17xx.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 97 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 339 in file RTE\Device\LPC1768\startup_LPC17xx.s

EINT3_IRQHandler 0000014E

Symbol: EINT3_IRQHandler
   Definitions
      At line 376 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 98 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 340 in file RTE\Device\LPC1768\startup_LPC17xx.s

ENET_IRQHandler 0000014E

Symbol: ENET_IRQHandler
   Definitions
      At line 383 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 105 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 347 in file RTE\Device\LPC1768\startup_LPC17xx.s

HardFault_Handler 0000013E

Symbol: HardFault_Handler
   Definitions
      At line 280 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 62 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 281 in file RTE\Device\LPC1768\startup_LPC17xx.s

I2C0_IRQHandler 0000014E

Symbol: I2C0_IRQHandler
   Definitions
      At line 365 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 87 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 329 in file RTE\Device\LPC1768\startup_LPC17xx.s

I2C1_IRQHandler 0000014E

Symbol: I2C1_IRQHandler
   Definitions
      At line 366 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 88 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 330 in file RTE\Device\LPC1768\startup_LPC17xx.s

I2C2_IRQHandler 0000014E

Symbol: I2C2_IRQHandler
   Definitions
      At line 367 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 89 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 331 in file RTE\Device\LPC1768\startup_LPC17xx.s

I2S_IRQHandler 0000014E



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: I2S_IRQHandler
   Definitions
      At line 382 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 104 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 346 in file RTE\Device\LPC1768\startup_LPC17xx.s

MCPWM_IRQHandler 0000014E

Symbol: MCPWM_IRQHandler
   Definitions
      At line 385 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 107 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 349 in file RTE\Device\LPC1768\startup_LPC17xx.s

MemManage_Handler 00000140

Symbol: MemManage_Handler
   Definitions
      At line 285 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 63 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 286 in file RTE\Device\LPC1768\startup_LPC17xx.s

NMI_Handler 0000013C

Symbol: NMI_Handler
   Definitions
      At line 275 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 61 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 276 in file RTE\Device\LPC1768\startup_LPC17xx.s

PLL0_IRQHandler 0000014E

Symbol: PLL0_IRQHandler
   Definitions
      At line 371 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 93 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 335 in file RTE\Device\LPC1768\startup_LPC17xx.s

PLL1_IRQHandler 0000014E

Symbol: PLL1_IRQHandler
   Definitions
      At line 387 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 109 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 351 in file RTE\Device\LPC1768\startup_LPC17xx.s

PWM1_IRQHandler 0000014E

Symbol: PWM1_IRQHandler
   Definitions
      At line 364 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 86 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 328 in file RTE\Device\LPC1768\startup_LPC17xx.s

PendSV_Handler 0000014A

Symbol: PendSV_Handler
   Definitions
      At line 308 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 73 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 309 in file RTE\Device\LPC1768\startup_LPC17xx.s

QEI_IRQHandler 0000014E

Symbol: QEI_IRQHandler
   Definitions
      At line 386 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 108 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 350 in file RTE\Device\LPC1768\startup_LPC17xx.s

RIT_IRQHandler 0000014E

Symbol: RIT_IRQHandler
   Definitions
      At line 384 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 106 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 348 in file RTE\Device\LPC1768\startup_LPC17xx.s

RTC_IRQHandler 0000014E

Symbol: RTC_IRQHandler
   Definitions
      At line 372 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 94 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 336 in file RTE\Device\LPC1768\startup_LPC17xx.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 125 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 60 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 126 in file RTE\Device\LPC1768\startup_LPC17xx.s

SPI_IRQHandler 0000014E

Symbol: SPI_IRQHandler
   Definitions
      At line 368 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 90 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 332 in file RTE\Device\LPC1768\startup_LPC17xx.s

SSP0_IRQHandler 0000014E




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

Symbol: SSP0_IRQHandler
   Definitions
      At line 369 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 91 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 333 in file RTE\Device\LPC1768\startup_LPC17xx.s

SSP1_IRQHandler 0000014E

Symbol: SSP1_IRQHandler
   Definitions
      At line 370 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 92 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 334 in file RTE\Device\LPC1768\startup_LPC17xx.s

SVC_Handler 00000146

Symbol: SVC_Handler
   Definitions
      At line 299 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 70 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 300 in file RTE\Device\LPC1768\startup_LPC17xx.s

SysTick_Handler 0000014C

Symbol: SysTick_Handler
   Definitions
      At line 312 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 74 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 313 in file RTE\Device\LPC1768\startup_LPC17xx.s

TIMER0_IRQHandler 0000014E

Symbol: TIMER0_IRQHandler
   Definitions
      At line 356 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 78 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 320 in file RTE\Device\LPC1768\startup_LPC17xx.s

TIMER1_IRQHandler 0000014E

Symbol: TIMER1_IRQHandler
   Definitions
      At line 357 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 79 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 321 in file RTE\Device\LPC1768\startup_LPC17xx.s

TIMER2_IRQHandler 0000014E

Symbol: TIMER2_IRQHandler
   Definitions
      At line 358 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 80 in file RTE\Device\LPC1768\startup_LPC17xx.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

      At line 322 in file RTE\Device\LPC1768\startup_LPC17xx.s

TIMER3_IRQHandler 0000014E

Symbol: TIMER3_IRQHandler
   Definitions
      At line 359 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 81 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 323 in file RTE\Device\LPC1768\startup_LPC17xx.s

UART0_IRQHandler 0000014E

Symbol: UART0_IRQHandler
   Definitions
      At line 360 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 82 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 324 in file RTE\Device\LPC1768\startup_LPC17xx.s

UART1_IRQHandler 0000014E

Symbol: UART1_IRQHandler
   Definitions
      At line 361 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 83 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 325 in file RTE\Device\LPC1768\startup_LPC17xx.s

UART2_IRQHandler 0000014E

Symbol: UART2_IRQHandler
   Definitions
      At line 362 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 84 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 326 in file RTE\Device\LPC1768\startup_LPC17xx.s

UART3_IRQHandler 0000014E

Symbol: UART3_IRQHandler
   Definitions
      At line 363 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 85 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 327 in file RTE\Device\LPC1768\startup_LPC17xx.s

USBActivity_IRQHandler 0000014E

Symbol: USBActivity_IRQHandler
   Definitions
      At line 388 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 110 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 352 in file RTE\Device\LPC1768\startup_LPC17xx.s

USB_IRQHandler 0000014E

Symbol: USB_IRQHandler



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 379 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 101 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 343 in file RTE\Device\LPC1768\startup_LPC17xx.s

UsageFault_Handler 00000144

Symbol: UsageFault_Handler
   Definitions
      At line 295 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 65 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 296 in file RTE\Device\LPC1768\startup_LPC17xx.s

WDT_IRQHandler 0000014E

Symbol: WDT_IRQHandler
   Definitions
      At line 355 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 77 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 319 in file RTE\Device\LPC1768\startup_LPC17xx.s

__user_initial_stackheap 00000150

Symbol: __user_initial_stackheap
   Definitions
      At line 411 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 410 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: __user_initial_stackheap used once
binaryExtendedGCD 00000062

Symbol: binaryExtendedGCD
   Definitions
      At line 192 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 193 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: binaryExtendedGCD used once
binaryGCD 0000000A

Symbol: binaryGCD
   Definitions
      At line 148 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 149 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: binaryGCD used once
continueAfter 0000008C

Symbol: continueAfter
   Definitions
      At line 209 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 203 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: continueAfter used once
continueAfterIf 00000058

Symbol: continueAfterIf



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 186 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 183 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: continueAfterIf used once
continueAfterIfExt 00000132

Symbol: continueAfterIfExt
   Definitions
      At line 266 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 261 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: continueAfterIfExt used once
continueAfterY 0000004A

Symbol: continueAfterY
   Definitions
      At line 179 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 175 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: continueAfterY used once
continueAfterYExt 00000114

Symbol: continueAfterYExt
   Definitions
      At line 255 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 236 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: continueAfterYExt used once
continueGCD 00000032

Symbol: continueGCD
   Definitions
      At line 167 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 159 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 168 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 187 in file RTE\Device\LPC1768\startup_LPC17xx.s

firstStepExt 0000006A

Symbol: firstStepExt
   Definitions
      At line 198 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 208 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: firstStepExt used once
firstStepGCP 00000010

Symbol: firstStepGCP
   Definitions
      At line 154 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 164 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: firstStepGCP used once
stop 00000008

Symbol: stop
   Definitions



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Relocatable symbols

      At line 145 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 145 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: stop used once
xEvenLoopExt 000000A0

Symbol: xEvenLoopExt
   Definitions
      At line 215 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 230 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 234 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 267 in file RTE\Device\LPC1768\startup_LPC17xx.s

xgtey 00000054

Symbol: xgtey
   Definitions
      At line 185 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 180 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: xgtey used once
xgteyExt 00000126

Symbol: xgteyExt
   Definitions
      At line 263 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 256 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: xgteyExt used once
yEvenLoop 0000003E

Symbol: yEvenLoop
   Definitions
      At line 174 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 178 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: yEvenLoop used once
yEvenLoopExt 000000DA

Symbol: yEvenLoopExt
   Definitions
      At line 235 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 216 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 250 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 254 in file RTE\Device\LPC1768\startup_LPC17xx.s

66 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 42 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 46 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 415 in file RTE\Device\LPC1768\startup_LPC17xx.s

Stack_Size 00000200

Symbol: Stack_Size
   Definitions
      At line 31 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 34 in file RTE\Device\LPC1768\startup_LPC17xx.s
      At line 414 in file RTE\Device\LPC1768\startup_LPC17xx.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SystemInit 00000000

Symbol: SystemInit
   Definitions
      At line 139 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 141 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: SystemInit used once
__main 00000000

Symbol: __main
   Definitions
      At line 140 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      At line 143 in file RTE\Device\LPC1768\startup_LPC17xx.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 409 in file RTE\Device\LPC1768\startup_LPC17xx.s
   Uses
      None
Comment: __use_two_region_memory unused
3 symbols
422 symbols in table
